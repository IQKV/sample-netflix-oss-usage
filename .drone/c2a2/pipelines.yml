kind : pipeline
name : CI

type : docker

trigger :
  event :
    - push
    - tag

volumes :
  - name : m2cache
    host :
      path : /app/.m2
steps :

  - name : build
    image : docker-registry.c2a2.com/ujar/svc-builder:openjdk-19-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MONGODB_SERVER_URI : mongodb://sa_mongo:sa_mongo@mongo:27017/userprofiledb?authSource=admin
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
      SONAR_HOST :
        from_secret : SONAR_HOST
      SONAR_TOKEN :
        from_secret : SONAR_TOKEN
    commands :
      - mvn clean compile test-compile --batch-mode -Dstyle.color=always -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      # - mvn pmd:check --batch-mode -Dstyle.color=always -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      # - mvn -Dstyle.color=always com.github.spotbugs:spotbugs-maven-plugin:check -Dspotbugs.xmlOutput=true -Dspotbugs.failOnError=true -Dspotbugs.includeTests=true -Dspotbugs.excludeFilterFile=../spotbugs-exclude.xml --batch-mode -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn -Dstyle.color=always org.jacoco:jacoco-maven-plugin:prepare-agent verify org.jacoco:jacoco-maven-plugin:report sonar:sonar -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=org.ujar:sample-acme-mix-cloud-netflix -Dsonar.projectName=org.ujar:sample-acme-mix-cloud-netflix --batch-mode -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn package -Dstyle.color=always -DskipTests -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true --batch-mode -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
    when :
      event :
        - push
        - tag

  - name : publish-snapshot-jar
    depends_on :
      - build
    image : docker-registry.c2a2.com/ujar/svc-builder:openjdk-19-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -DskipTests -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD -DaltDeploymentRepository=ujar-snapshots-repository::default::https://nexus.c2a2.com/repository/maven-snapshots
    when :
      branch :
        include :
          - "develop"
          - "prerelease/*"
          - "*.*.x"

  - name : publish-release-jar
    depends_on :
      - build
    image : docker-registry.c2a2.com/ujar/svc-builder:openjdk-19-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -DskipTests -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD -DaltDeploymentRepository=ujar-releases-repository::default::https://nexus.c2a2.com/repository/maven-releases
    when :
      ref :
        - "refs/tags/*"


  - name : build-container-with-feature-for-service-registry
    depends_on :
      - build
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./service-registry/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-service-registry
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-with-feature-for-api-gateway
    depends_on :
      - build-container-with-feature-for-service-registry
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./api-gateway/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-api-gateway
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-with-feature-for-config-server
    depends_on :
      - build-container-with-feature-for-api-gateway
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./config-server/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-config-server
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-with-feature-for-hystrix-dashboard
    depends_on :
      - build-container-with-feature-for-config-server
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./hystrix-dashboard/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-hystrix-dashboard
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-with-feature-for-department-service
    depends_on :
      - build-container-with-feature-for-hystrix-dashboard
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./department-service/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-department-service
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-with-feature-for-user-profile-service
    depends_on :
      - build-container-with-feature-for-department-service
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./user-profile-service/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-user-profile-service
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-release-service-registry
    depends_on :
      - build
      - publish-release-jar
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./service-registry/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-service-registry
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

  - name : build-container-release-api-gateway
    depends_on :
      - build-container-release-service-registry
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./api-gateway/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-api-gateway
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

  - name : build-container-release-config-server
    depends_on :
      - build-container-release-api-gateway
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./config-server/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-config-server
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

  - name : build-container-release-hystrix-dashboard
    depends_on :
      - build-container-release-config-server
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./hystrix-dashboard/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-hystrix-dashboard
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

  - name : build-container-release-department-service
    depends_on :
      - build-container-release-hystrix-dashboard
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./department-service/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-department-service
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

  - name : build-container-release-user-profile-service
    depends_on :
      - build-container-release-department-service
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./user-profile-service/
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/sample-acme-mix-user-profile-service
      registry : docker-registry.c2a2.com
      force_tag : true
      build_args : BUILD_VERSION=${DRONE_COMMIT}
      tags :
        - ${DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"


services :
  - name : mongo
    image : mongo:5.0-focal
    environment :
      MONGO_INITDB_ROOT_USERNAME : sa_mongo
      MONGO_INITDB_ROOT_PASSWORD : sa_mongo
      MONGO_INITDB_DATABASE : userprofiledb


---

kind : pipeline
name : CreateReleaseManually
type : docker
trigger :
  event :
    - custom
  branch:
    - "develop"
    - "*.*.x"

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : create-release-tag
    image : docker-registry.c2a2.com/ujar/svc-builder:openjdk-19-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    commands :
      - echo Prepare new version ${RELEASE_VERSION}
      - mkdir ${RELEASE_VERSION}
      - rmdir ${RELEASE_VERSION}
      - export NEXT_SNAPSHOT=$(increment_version -m ${RELEASE_VERSION})-SNAPSHOT
      - export GIT_AUTHOR_NAME=$${SVC_BUILD_GIT_USERNAME}
      - export GIT_AUTHOR_EMAIL=$${SVC_BUILD_GIT_EMAIL}
      - export GIT_COMMITTER_NAME=$${SVC_BUILD_GIT_USERNAME}
      - export GIT_COMMITTER_EMAIL=$${SVC_BUILD_GIT_EMAIL}
      - git remote set-url --push origin ${DRONE_GIT_SSH_URL}
      - git checkout -b v${RELEASE_VERSION}
      - mvn versions:set -DremoveSnapshot
      - mvn versions:set -DnewVersion=${RELEASE_VERSION}
      - mvn versions:update-parent
      - >-
        git commit -a -m "feat: bump version to $${RELEASE_VERSION}"
      - git tag ${RELEASE_VERSION} && git push origin ${RELEASE_VERSION}
      - echo "✅ Release tag ${RELEASE_VERSION} was created."
      - sleep 10
      - git tag -d ${RELEASE_VERSION} && git checkout ${DRONE_COMMIT_BRANCH} && git branch -D v${RELEASE_VERSION}
      - mvn versions:set -DnewVersion=$${NEXT_SNAPSHOT}
      - mvn versions:update-parent -DallowSnapshots=true
      - >-
        git commit -a -m "feat: create new $${NEXT_SNAPSHOT}"
      - git push origin ${DRONE_COMMIT_BRANCH}
      - echo "✅ Started $${NEXT_SNAPSHOT}."
      - echo "🚀 Good job, new version ${RELEASE_VERSION} was released successfully."

